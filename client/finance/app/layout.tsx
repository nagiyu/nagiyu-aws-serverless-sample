import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";

import BasicAppBar from '@client-common/components/surfaces/AppBars/BasicAppBar';
import DirectionStack from '@client-common/components/Layout/Stacks/DirectionStack';
import LinkMenu, { MenuItemData } from '@client-common/components/navigations/Menus/LinkMenu';
import NotificationSettingButton from '@client-common/components/inputs/buttons/NotificationSettingButton';
import SignInButton from '@client-common/components/inputs/Buttons/SignInButton';
import SignoutButton from '@client-common/components/inputs/Buttons/SignOutButton';

import FinanceAuthorizer from '@/services/finance/FinanceAuthorizer';

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

async function getMenuItems(): Promise<MenuItemData[]> {
  const menuItems: MenuItemData[] = [];

  if (await FinanceAuthorizer.isUser()) {
    menuItems.push(
      { title: 'Home', url: '/' },
      { title: 'My Ticker', url: '/myticker' },
    );
  }

  if (await FinanceAuthorizer.isAdmin()) {
    menuItems.push(
      { title: 'Exchange', url: '/exchanges' },
      { title: 'Ticker', url: '/tickers' },
    );
  }

  return menuItems;
}

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="ja">
      <head>
        <link rel="manifest" href="/manifest.webmanifest" />
      </head>
      <body className={`${geistSans.variable} ${geistMono.variable}`}>
        <BasicAppBar
          center={
            <div>Finance</div>
          }
          right={
            <>
              {await FinanceAuthorizer.isUser() ? (
                <DirectionStack>
                  <SignoutButton />
                  <NotificationSettingButton />
                  <LinkMenu menuItems={await getMenuItems()} />
                </DirectionStack>
              ) : (
                <SignInButton />
              )}
            </>
          }
        />
        {children}
      </body>
    </html>
  );
}
